user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http  {
	include /etc/nginx/mime.types;
	default_type application/octet-stream;

	server {
		listen 5678;
		listen [::]:5678;
		set $port ":1234";

		# To add headers for debugging :
		# add_header X-uri "$uri" always;
		# add_header X-host "$host" always;
		# add_header X-server "$server_name" always;
		# add_header X-redirect "https://$host$port$request_uri" always;

        # Permanent redirection to HTTPS
		return 301 https://$host$port$request_uri;
	}

	server {
		listen 1234 ssl;
		listen [::]:1234 ssl;
        client_header_timeout 60s;
        client_body_timeout 60s;
        send_timeout 60s;
		server_name localhost;
		root /etc/nginx/;
        index /index.html;

		ssl_protocols TLSv1.2 TLSv1.3;
		ssl_certificate /etc/nginx/ssl/transcendence.crt;
		ssl_certificate_key /etc/nginx/ssl/transcendence.key;

        location / {
            # proxy_pass http://127.0.0.1:8001;  # Daphne or ASGI server address
            # proxy_set_header Host $host;
            # proxy_set_header X-Real-IP $remote_addr;
            # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            # proxy_set_header X-Forwarded-Proto $scheme;
            try_files $uri $uri/ /index.html;
        }

        location /ws/ {  # The WebSocket connection path
            proxy_pass http://backend:8000;  # Daphne's address => To redirect the requests to the server daphne(django) in backend
            proxy_http_version 1.1; # define the version http 1.1 necessary to websockets
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

		location /project-static/ {
            alias /app/staticfiles/;
            expires 30d;
            add_header Cache-Control "public, max-age=2592000";
        }
# proxy for the path /backend/

# when a client sends a request to https://yourdomain.com/backend/api
# Nginx will forward this request to http://backend:8000/api

#  forwards the original Host header from the client request to the backend service

# sets the X-Real-IP header to the client's real IP address ($remote_addr)

# forwards the IP address chain, adding the client's IP address to the X-Forwarded-For header

# sets the X-Forwarded-Proto header to indicate whether the original request was made using HTTP or HTTPS 

# sends the X-Forwarded-Host header with the original host and port number used by the client
        location /backend/ {
            proxy_pass http://backend:8000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host:$server_port;
        }

# proxy for the path /admin/
        location /admin/ {
            proxy_pass http://backend:8000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
			# --
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; 
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # location /media/ {
        #     alias /app/media/;
        # }

        # error_page 404 /index.html;
        # error_page 500 502 503 504 /50x.html;
        # location = /50x.html {
        #     root /usr/share/nginx/html;
        # }

	}
}

