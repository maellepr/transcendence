services:

  backend:
    container_name: backend
    build:
      context: ./backend
    #   dockerfile: ./backend/Dockerfile
    # env_file: 
    #   - .env
    volumes:
      - ./backend:/app
      - static_volume:/app/staticfiles
      # - ./.env:/app/.env
    environment:
      - CLIENT_ID=${CLIENT_ID}
      - CLIENT_SECRET=${CLIENT_SECRET}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - DJANGO_SUPERUSER_USERNAME=${DJANGO_SUPERUSER_USERNAME}
      - DJANGO_SUPERUSER_EMAIL=${DJANGO_SUPERUSER_EMAIL}
      - DJANGO_SUPERUSER_PASSWORD=${DJANGO_SUPERUSER_PASSWORD}
      - SECRET_KEY=${SECRET_KEY}
      - EMAIL_HOST_USER=${EMAIL_HOST_USER}
      - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD}
      - DEFAULT_FROM_EMAIL=${DEFAULT_FROM_EMAIL}  
    # ports:
    #   - 8001:8001
      # - 8000:8000 # Attention a changer pour juste 8000 car sinon port accessible depuis l exterieur probablement
    expose :
      - 8000
    depends_on:
      - db
      # db:
        # condition: service_healthy
    networks:
      - backend

  db: # + healthcheck
    image: postgres:14
    container_name: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      # - "POSTGRES_HOST_AUTH_METHOD=trust"
      # - DB_NAME=${DB_NAME}
      # - DB_USR=${DB_USR}
      # - DB_PWD=${DB_PWD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    networks:
      - backend

  nginx:
    container_name: nginx
    build:
      context: ./
      dockerfile: ./nginx/Dockerfile
    ports:
      - "1234:1234"
      - "5678:5678"
    volumes:
      - ./frontend:/usr/share/nginx/html
      - static_volume:/app/staticfiles
    depends_on:
      - backend
    networks:
      - frontend
      - backend

  redis:
    image: redis:5
    container_name: redis
    ports:
      - 6379
    networks:
      - frontend
      - backend

networks:
  frontend:
  backend:

volumes:
  postgres_data:
  static_volume: